name: Dashboard CI/CD - ONFIT13

on:
    schedule:
        # Run every hour
        - cron: '0 * * * *'
    workflow_dispatch:
    push:
        branches: [main]
        paths: ['scripts/generate-metrics.js', 'docs/dashboard/**']

jobs:
    generate-dashboard:
        name: Generate Dashboard
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pages: write
            id-token: write

        steps:
            - name: 🏗 Setup repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: 🏗 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: 🏗 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.12.4

            - name: 📦 Install dependencies
              run: pnpm install --no-frozen-lockfile

            - name: 📊 Generate metrics
              run: node scripts/generate-metrics.js

            - name: 🚀 Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./docs/dashboard
                  destination_dir: dashboard

            - name: 💬 Comment on PR (if in PR context)
              if: ${{ github.event_name == 'pull_request' }}
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      if (fs.existsSync('docs/dashboard/data/metrics.json')) {
                          const metrics = JSON.parse(fs.readFileSync('docs/dashboard/data/metrics.json', 'utf8'));
                          
                          const comment = `## 📊 Dashboard CI/CD Actualizado
                          
                          **Métricas del Pipeline:**
                          - 📈 Tasa de éxito: ${metrics.summary.successRate}
                          - 🔒 Vulnerabilidades: ${metrics.summary.vulnerabilities}
                          - 📦 Dependencias obsoletas: ${metrics.summary.outdatedDeps}
                          - 🧪 Cobertura de tests: ${metrics.summary.testCoverage}
                          - 🚀 Estado del pipeline: ${metrics.summary.pipelineStatus}
                          
                          **Dashboard disponible en:** https://${context.repo.owner}.github.io/${context.repo.repo}/dashboard/
                          
                          _Actualizado automáticamente por el pipeline CI/CD_`;
                          
                          await github.rest.issues.createComment({
                              issue_number: context.issue.number,
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              body: comment
                          });
                      }
