name: Release Pipeline - ONFIT13

on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:
        inputs:
            version:
                description: 'Version to release (e.g., v1.0.0)'
                required: true
                type: string

jobs:
    release:
        name: Create Release
        runs-on: macos-latest
        permissions:
            contents: write
            pull-requests: write

        steps:
            - name: 🏗 Setup repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: 🏗 Setup monorepo
              uses: ./.github/actions/setup-monorepo

            - name: 📝 Generate Changelog
              id: changelog
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                      VERSION="${{ github.event.inputs.version }}"
                  else
                      VERSION="${{ github.ref_name }}"
                  fi
                  
                  echo "📋 Generating changelog for $VERSION..."
                  
                  # Get commits since last tag
                  LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
                  if [[ -n "$LAST_TAG" ]]; then
                      COMMITS=$(git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD)
                  else
                      COMMITS=$(git log --pretty=format:"- %s (%h)" --max-count=20)
                  fi
                  
                  echo "## 🚀 Release $VERSION" > CHANGELOG.md
                  echo "" >> CHANGELOG.md
                  echo "### 📝 Changes" >> CHANGELOG.md
                  echo "$COMMITS" >> CHANGELOG.md
                  
                  echo "changelog<<EOF" >> $GITHUB_OUTPUT
                  cat CHANGELOG.md >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: 🏷️ Create Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.event.inputs.version || github.ref_name }}
                  release_name: Release ${{ github.event.inputs.version || github.ref_name }}
                  body: ${{ steps.changelog.outputs.changelog }}
                  draft: false
                  prerelease: false

            - name: 📦 Build Artifacts
              run: |
                  echo "🔨 Building all applications..."
                  pnpm build
                  
                  echo "📦 Creating artifacts..."
                  mkdir -p artifacts
                  
                  # Web build artifacts
                  if [[ -d "apps/web/.next" ]]; then
                      tar -czf artifacts/web-build.tar.gz -C apps/web .next
                  fi
                  
                  # Native build artifacts (if available)
                  if [[ -d "apps/native/android" ]]; then
                      tar -czf artifacts/native-android.tar.gz -C apps/native android
                  fi
                  
                  if [[ -d "apps/native/ios" ]]; then
                      tar -czf artifacts/native-ios.tar.gz -C apps/native ios
                  fi

            - name: 📎 Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: release-artifacts-${{ github.event.inputs.version || github.ref_name }}
                  path: artifacts/
                  retention-days: 30

            - name: 💬 Notify Success
              run: |
                  echo "✅ Release ${{ github.event.inputs.version || github.ref_name }} created successfully!"
                  echo "📦 Artifacts uploaded and available for download"
                  echo "🏷️ Tag: ${{ github.event.inputs.version || github.ref_name }}"
